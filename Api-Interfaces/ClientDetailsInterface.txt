1) Структура для обратной связи (при создании пользователем) 
(POST) /callMeTicket
Запрос:
/callMeTicket
{
	"mobileNumber": "+78888888888",
	"type" : 3   // call=0, telegram, viber, whatsup
}
Ответ: 200 OK / HTTP ошибка
Возможен ответ в виде ошибки в виду невалидного номера телефона - не рализовано.
Реализовано. Можно проверить в БД в таблице callMeTicket.

2)Быстрый поиск 
(GET) /?q=    // параметр q - это строка
Запрос: 
/?q=3
Ответ:
{
    "details": [
        {
            "detailNumber": "Dns4llda3",
            "detailName": "Капот для Skoda Octavia"
        },
        {
            "detailNumber": "Kjjsa3232",
            "detailName": "Правая передняя фара для BMW 321"
        }
    ]
}
Реализовано. Можно проверить в БД по таблице details, сверка по вхождению подстроки в detailNumber.

3) Полный поиск 
(GET) /solid?q=     // параметр q - это строка
Запрос: 
/solid?q=Dns4llda3
Ответ:
{
    "details": [
        {
            "internalId": 1,
            "type": 1,   // original=0, analog
            "detailNumber": "Dns4llda3",
            "originalDetailNumber": "8384382",
            "detailName": "Капот для Skoda Octavia",
            "price": 1999.83,
            "delivery": null,
            "description": "Оригинальный, неокрашенный",
            "quantity": 2
        }
    ]
}
Реализовано. Можно проверить в БД по таблице details, сверка по совпадению строки с detailNumber.

4) Получение списка вариантов доставки 
(GET) /getDeliveryMethods
Запрос:
/getDeliveryMethods
Ответ:
{
    "methods": [
        {
            "id": 1,
            "locationType": 0,   // moscow=0, russia
            "deliveryType": 0,   // lightweight=0, largeweight
            "deliveryName": "Курьером в пределах МКАД",
            "deliveryPrice": 12656   // если 0 - доставка бесплатная, если поле отсутствует - обсуждается индивидуально
        },
        {
            "id": 2,
            "locationType": 0,
            "deliveryType": 0,
            "deliveryName": "Доставка за МКАД",
            "deliveryPrice": null
        },
		...
    ]
}
Реализовано. Методы доставки описаны в БД в таблице deliveryMethods.

5) Проверка возможности заказа (POST)//  URL: /checkOrderAvailability
CheckOrderAvailabilityRequest
{
	OrderItem[] items;
	string customerName;
	string customerSurname;
	string customerPhone;
	string customerAdress;
	string customerMail;
	string customerComment;
	int (number) deliveryType; // договоримся о списке позже -- enum?
}
OrderItem 
{
	int (number) internalId; // наш внутренний ID
	int (number) quantity; // количество в заказе
}
CheckOrderAvailabilityResponse
{
	int orderID; // nullable
	OrderItem[] problemItems; // nullable
}
Не реализовано.

6) Выбор типа оплаты заказа  (POST)// URL: /selectPaymentMethod
SelectPaymentMethodRequest
{
	int (number) orderId;
	int (number) paymentType; // порядок определим потом -- enum?
}
SelectPaymentMethodResponse
{
	string linkToPayment; // nullable IFrame link
}
Не реализовано.

7) Проверка статуса заказа (для проверки, оплачен ли заказ)
(GET) /CheckOrderState?orderId=
Запрос:
/CheckOrderState?orderId=1050
Ответ:
{
    "state": 0
}
Возможен ответ 404, если заказ не найден.
Реализовано, но не определены возможные статусы заказа.