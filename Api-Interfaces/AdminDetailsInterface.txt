0) Авторизация
Во всех запросах ниже предусмотреть ответы 401 Unautorized, 403 Forbidden
Не реализовано.





1) Получение списка заявок "Перезвони мне" (с пагинацией по 25, нумерация с 1) 
(GET) /admin/CallMeTickets?page=
Запрос:
/admin/CallMeTickets?page=2
Ответ:
{
    "tickets": [
        {
            "id": 0,
            "mobileNumber": "+71111111111",
            "type": 1, // call=0, telegram, viber, whatsup
            "isNew": true
        },
        {
            "id": 0,
            "mobileNumber": "+78888888888",
            "type": 3,
            "isNew": true // true - новый, false - позвонили уже
        }
    ],
    "currentPage": 2,
    "totalPages": 2
}
Реализовано. Можно проверить в БД в таблице callMeTicket.

2) Перевод заявки "Перезвони мне" в состояние "перезвонили" 
(PUT) /admin/CallMeTickets/SetDone/{ticketId}
Запрос:
/admin/CallMeTickets/SetDone/21
Ответ:
200 ОК / 404 NOT FOUND / HTTP ошибка
Реализовано. Можно проверить в БД в таблице callMeTicket.

3) Удаление заявки "Перезвони мне" 
(DELETE) /admin/CallMeTickets/{ticketId}
Запрос:
/admin/CallMeTickets/21
Ответ:
200 ОК / 404 NOT FOUND / HTTP ошибка
Реализовано. Можно проверить в БД в таблице callMeTicket.

4) Просмотр информации о конкретном товаре 
(GET) /admin/details/{internalId}
Запрос:
/admin/details/2
Ответ:
{
    "internalId": 3,
    "type": 1, // origin=0, analog
    "detailNumber": "Kjjsa3232",
    "originalDetailNumber": null,
    "name": "Правая передняя фара для BMW 321",
    "price": 34560,
    "deliveryTime": "1-2 недели",
    "description": "Китай, галоген",
    "stockQuantity": 0,
    "provider": null,
    "isDeleted": false
}
Возможен ответ 404, если деталь не найдена.
Реализовано. Можно проверить в БД в таблице details.

5) Редактирование информации о конкретном товаре 
(PUT) /admin/details/{internalId}
Запрос:
/admin/details/3
{
    "internalId": 3,
    "type": 0, // origin=0, analog
    "detailNumber": "Kjjsa3232_updated",
    "originalDetailNumber": "90",
    "name": "Правая передняя фара для BMW 321 updated",
    "price": 34560.80,
    "deliveryTime": "1-2 недели",
    "description": "Китай, галоген",
    "stockQuantity": 0,
    "provider": null,
    "isDeleted": false
}
Ответ:
200 ОК / 404 NOT FOUND / HTTP ошибка
Реализовано. Можно проверить в БД в таблице details.

6) Удаление конкретного товара (пометка о том, что товар удален. Физическое удаление не производится ) 
(DELETE) /admin/details/{internalId}
Запрос:
/admin/details/1001
Ответ:
200 ОК / 404 NOT FOUND / HTTP ошибка
Реализовано. Можно проверить в БД в таблице details.





7) Просмотр списка заказов (с пагинацией и фильтрацией по нескольким статусам) GET URL:/admin/orders?page={page_numer}&status[]={status1}&status[]={status2}
Структура ответа:
ShortOrdersResponse
{
	ShortOrder[] orders;
	int currentPage;
	int totalPages;
}
ShortOrder
{
	int orderID;
	string customerName; // ФИО покупателя
	string date;
	string sum;
	enum (string) orderStatus; // 
}
200, либо 404,500
Не реализовано.

8) Просмотр конкретного заказа GET URL:/admin/orders/{orderId}
Структура ответа:
DetailOrderResponse
{
	int orderId;
	string date;
	string customerName;
	string customerSurname;
	string customerPhone;
	string customerAdress;
	string customerMail;
	string customerComment;
	int deliveryTypeId; 
	int deliveryPrice;
	int  paymentType;
	enum (string) orderStatus; // Список статусов заказов согласуем с Вовой позже. 
}
200, либо 404,500
Не реализовано.

9) Просмотр товаров конкретного заказа GET URL:/admin/orders/{orderId}/items
Структура ответа 
OrderItem []
{
	int orderItemId;
	int (number) internalId; // наш внутренний ID
	enum (string) type; // origin, analog
	string detailNumber;
	string originalDetailNumber;
	string detailName;
	Decimal (number) price;
	string delivery;
	int (number) quantity; // количество в заказе
}
Не реализовано.

10) Редактирование конкретного заказа PUT URL:/admin/orders/{orderId}
Структура запроса 
DetailOrderRequest
{
	int orderId;
	string customerName;
	string customerSurname;
	string customerPhone;
	string customerAdress;
	string customerMail;
	string customerComment;
	int deliveryTypeId; 
	int  paymentType;
	enum (string) orderStatus; // Список статусов заказов согласуем с Вовой позже. 
}
Ответ 200, либо 404, 500
Не реализовано.

11) Добавление товаров в конкретный заказ POST URL:/admin/orders/{orderId}/items
Структура запроса 
OrderItem 
{
	int (number) internalId; // наш внутренний ID
	int (number) quantity; // количество в заказе
}
Ответ 200, либо 404, 500
Не реализовано.

12) Редактирование товара в конкретном заказе PUT URL:/admin/orders/{orderId}/items/{orderItemId}
Структура запроса 
OrderItem
{
	int (number) quantity; // количество в заказе
}
Ответ 200, либо 404, 500
Не реализовано.

13) Удаление товара в конкретном заказе DELETE URL:/admin/orders/{orderId}/items/{orderItemId}
Ответ 200, либо 404, 500
Не реализовано.

14) Загрузка файлов на парсинг POST URL:/admin/UploadFile
Структура запроса: content-type:multipart
key: file
value - загружаемый файл
key: fileType
value - целочисленное число, обозначающее тип прайса. Типы определим позже

Ответ: 200, BadRequest, 500
